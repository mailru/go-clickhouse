linters:
  disable-all: true
  fast: false
  enable:
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - deadcode
    - typecheck
    - bodyclose
    - noctx
#    - golint #deprecated
    - rowserrcheck
    - stylecheck
    - gosec
#    - interfacer #deprecated
    - unconvert
#    - dupl
    - goconst
#    - gocognit
    - asciicheck
    - gofmt
#    - gofumpt
#    - goimports
#    - goheader
    - gci
#    - maligned
    - depguard
    - misspell
#    - lll
    - unparam
    - dogsled
    - nakedret
#    - prealloc
    - gocritic
#    - gochecknoinits
#    - gochecknoglobals
#    - godox
#    - funlen
    - whitespace
#    - wsl
    - goprintffuncname
#    - gomnd
#    - goerr113
#    - gomodguard
#    - godot
#    - testpackage
#    - nestif
    - exportloopref
    - exhaustive
    - sqlclosecheck
    - forcetypeassert
    - wastedassign
    - gomoddirectives
    - nilerr
    - revive
    - ifshort
    - predeclared
    - forbidigo
    - makezero
    - thelper
#    - errorlint
#    - wrapcheck
    - tagliatelle
#    - promlinter
#    - paralleltest
#    - tparallel
#    - nlreturn
    - nolintlint

linters-settings:
  gocritic:
    settings:
      captLocal: # must be valid enabled check name
        # whether to restrict checker to params only (default true)
        paramsOnly: true
      elseif:
        # whether to skip balanced if-else pairs (default true)
        skipBalanced: true
      hugeParam:
        # size in bytes that makes the warning trigger (default 80)
        sizeThreshold: 80
      nestingReduce:
        # min number of statements inside a branch to trigger a warning (default 5)
        bodyWidth: 5
      rangeExprCopy:
        # size in bytes that makes the warning trigger (default 512)
        sizeThreshold: 512
        # whether to check test functions (default true)
        skipTestFuncs: true
      rangeValCopy:
        # size in bytes that makes the warning trigger (default 128)
        sizeThreshold: 32
        # whether to check test functions (default true)
        skipTestFuncs: true
      ruleguard:
        # path to a gorules file for the ruleguard checker
        rules: ''
      truncateCmp:
        # whether to skip int/uint/uintptr types (default true)
        skipArchDependent: true
      underef:
        # whether to skip (*x).method() calls where x is a pointer receiver (default true)
        skipRecvDeref: true
      unnamedResult:
        # whether to check exported functions
        checkExported: true
  errcheck:
    check-type-assertions: true
    check-blank: false
  govet:
    check-shadowing: false
  goconst:
    min-len: 2
    min-occurrences: 3
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: false
  revive:
    # see https://github.com/mgechev/revive#available-rules for details.
    ignore-generated-header: true
    severity: warning
    rules:
      - name: indent-error-flow
      - name: argument-limit
        arguments: 4
      - name: atomic
#      - name: bare-return
      - name: blank-imports
      - name: confusing-results
      - name: constant-logical-expr
      - name: context-as-argument
      - name: context-keys-type
      - name: deep-exit
      - name: defer
      - name: dot-imports
      - name: early-return
      - name: empty-block
      - name: empty-lines
      - name: error-return
      - name: error-strings
      - name: function-result-limit
        arguments: 3
      - name: if-return
      - name: increment-decrement
      - name: indent-error-flow
      - name: import-shadowing
      - name: modifies-parameter
      - name: modifies-value-receiver
      - name: range
      - name: receiver-naming
      - name: redefines-builtin-id
      - name: string-of-int
      - name: struct-tag
      - name: superfluous-else
      - name: unexported-return
      - name: unnecessary-stmt
      - name: var-declaration
      - name: time-naming
  ifshort:
    # Maximum length of variable declaration measured in number of lines, after which linter won't suggest using short syntax.
    # Has higher priority than max-decl-chars.
    max-decl-lines: 1
    # Maximum length of variable declaration measured in number of characters, after which linter won't suggest using short syntax.
    max-decl-chars: 30
  predeclared:
    # comma-separated list of predeclared identifiers to not report on
    ignore: ""
    # include method names and field names (i.e., qualified names) in checks
    q: false
  forbidigo:
    # Forbid the following identifiers (identifiers are written using regexp):
    forbid:
      - ^print.*$
      - 'fmt\.Print.*'
    # Exclude godoc examples from forbidigo checks.  Default is true.
    exclude_godoc_examples: false
  makezero:
    # Allow only slices initialized with a length of zero. Default is false.
    always: false
  errorlint:
    # Check whether fmt.Errorf uses the %w verb for formatting errors. See the readme for caveats
    errorf: true
    # Check for plain type assertions and type switches
    asserts: true
    # Check for plain error comparisons
    comparison: true
  tagliatelle:
    # check the struck tag name case
    case:
      # use the struct field name to check the name of the struct tag
      use-field-name: true
      rules:
        # any struct tag type can be used.
        # support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
        json: snake
        yaml: snake
  #        xml: camel
  #        bson: camel
  #        avro: snake
  #        mapstructure: kebab
  exhaustive:
    # check switch statements in generated files also
    check-generated: false
    # indicates that switch statements are to be considered exhaustive if a
    # 'default' case is present, even if all enum members aren't listed in the
    # switch
    default-signifies-exhaustive: true

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - sqlclosecheck
        - rowserrcheck
